Avant de commencer le projet, veuillez au moins lire ceci

Il s'agit d'une liste non exhaustive de choses dont vous devez vous occuper avant de commencer le projet.
Elle répondra aussi à beaucoup de questions que nous avons vues dans le passé.

Stockez tous vos utilisateurs dans une liste / carte (en tant qu'utilisateur * si possible) ;

Ne faites pas de multiserveur

Si vous avez le temps, faites TLS, cela en vaut la peine.

Créez une classe de message (avec expéditeur, destinataire, charge utile, commande appelée, etc) qui vous sera utile.

PASS doit être envoyé avant tout autre paquet, ne crie un message que si l'utilisateur est enregistré
(nick et mot de passe ont été complétés avec succès) et refuse la connexion à ce moment (vous pouvez le faire sur bad PASS directement si vous le souhaitez)

USER peut être appelé avant NICK

Pour compléter un enregistrement, vous devez envoyer RPL 1 à 4.

Si un client envoie une commande CAP, ignorez-la, ne lancez pas d'erreur.

Pour obtenir la commande à appeler, faites un map avec une chaîne de caractères comme clé (nom de la commande) et un pointeur vers la fonction (c'est cool).

Pour tester ipv6 vous pouvez utiliser irssi et ajouter -6 pendant le /connect

Le port IRC par défaut est 6667 (6697 pour tls), lorsque vous soumettez votre travail, veuillez les utiliser,
c'est ennuyeux de le spécifier lorsque vous testez dans une défense
(lorsque vous utilisez irssi par exemple, spécifier 6667 à chaque fois à la fin est ennuyeux)

Si vous avez le temps, faites REHASH, c'est vraiment cool de le voir fonctionner.

Si vous avez le temps et que vous avez bien démarré le projet, faites STATS.

La RFC 1459 est dépassée, utilisez la 2812, la 2813 est pour le multiserveur.

Le sujet est cassé, vous devriez démarrer votre exécutable comme ceci :
    $> ./ircserv <port> <mot de passe>
mais manipulez l'autre forme :
    $> ./ircserv [host:port_network:password_network] <port> <password>
sinon certaines personnes peuvent se mettre en colère sans raison

Mettez en mémoire tampon chaque sortie, vous n'êtes autorisé à faire qu'un (1) send() par select().

Ajoutez MSG_NOSIGNAL comme 4ème argument pour send, cela empêchera votre programme de planter dans certaines conditions.

Implémentez les RPL en cours de route, vous n'aurez pas besoin de toutes les implémenter.

Implémentez RPL et ERR comme macro

N'utilisez pas libera.chat comme serveur de test, c'est un excellent serveur irc
mais il utilise beaucoup de fonctionnalités ircv3.0, utilisez plutôt un serveur auto-hébergeable (ngirc, oragono etc...)
vous pouvez même utiliser notre serveur, irc.ircgod.com:6667/6697

Vous pouvez coder en dur l'opérateur

Le mot de passe de l'opérateur n'est pas le même que celui du serveur.

Le nom de l'opérateur n'est pas la même chose que votre surnom / nom d'utilisateur etc, oper est comme utiliser sudo -u

bircd.tar.gz est juste un serveur tcp de base, pas un serveur irc, vous pouvez l'utiliser le premier jour pour vous amuser mais ce n'est pas utile.

Utilisez wireshark / un proxy personnalisé etc... pour inspecter la communication entre votre serveur de référence (ou votre serveur) et vous votre client.
